"""
Django settings for estore project.
Version : 2.0.0

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/

        EStore - Network Core
        Base Setting File
        Author: Amit Kumar (AKS Labs(India))
        Date: 25/06/2024
        Version: 3.0
        Notes: Change this file for your project if you know what you are doing
        Final Theme Select: Rocket Soft UI using Django Soft  UI Dashboard released version 1.6 django-admin-soft-dashboard
"
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3fw5#adkglmvrqbxztccqb6o@l6n%g7b#_0@tjdhct1j()e1qf'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'databases',
    'rest_framework',
    'oauth2_provider',
    'django_dyn_api',       
    'django_api_gen',
    'rest_framework.authtoken',
    'corsheaders',
    'estore',
    'core',
    
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    'whitenoise.middleware.WhiteNoiseMiddleware',

]
# In Production Version Remove true and controll for restricted origins
CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins (for development)
CORS_ORIGIN_WHITELIST = (
    'http://localhost:3000',
)

ROOT_URLCONF = 'estore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'estore.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
# add the following just below STATIC_URL
MEDIA_URL = '/media/' # add this
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # add this

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#TODO: Check all tables and API endpoints 

# Remove and create new after testing
DYNAMIC_API = {
    # pattern: 
    # API_SLUG -> Import_PATH 
     
    'clients': "databases.models.clients.Client",
    'stores' : "databases.models.clients.Store",
    'storegroups': "databases.models.clients.StoreGroup",   
    
    #banking
    'banks': "databases.models.banking.Bank",
    'banktransactions': "databases.models.banking.BankTransaction",
    'bankaccountlists': "databases.models.banking.BankAccountList",
    'chequebooks': "databases.models.banking.ChequeBook",
    'chequeissued': "databases.models.banking.ChequeIssued",
    'chequelogs': "databases.models.banking.ChequeLog",
    'bankstatements': "databases.models.banking.BankStatement",
    
    #accounting
    'ledgers': "databases.models.accounting.Ledger",
    'ledgergroups': "databases.models.accounting.LedgerGroup",
    'cashdetails': "databases.models.accounting.CashDetail",   
    'duerecoveries': "databases.models.accounting.DueRecovery",
    'transactionmodes': "databases.models.accounting.TransactionMode",
    'posMachines': "databases.models.accounting.EDCTerminal",
    
    #Coere
    'customers': "databases.models.core.Customer",
    'contacts': "databases.models.core.Contact",
    
    'employeeDetails':'databases.models.hrms.EmployeeDetails',
    'monthlyattendaces': "databases.models.hrms.Attendance",
    'salaryledgers': "databases.models.hrms.SalaryLedger",
    'timesheets': "databases.models.hrms.TimeSheet",
    'salaries': "databases.models.hrms.Salary",
    'salaryPayments': "databases.models.hrms.SalaryPayment",
    'payslips': "databases.models.hrms.PaySlip",
    'salesmen': "databases.models.core.Salesman",
    
    
}

API_GENERATOR = {
    # pattern: 
    # API_SLUG -> Import_PATH 
    'clients': "databases.models.clients.Client",
    'stores' : "databases.models.clients.Store",
    'storegroups': "databases.models.clients.StoreGroup",  
    
    #banking
    'bankaccounts': "databases.models.banking.BankAccount",
    'vendorbankaccounts': "databases.models.banking.VendorBankAccount",
    
    #Accounting
    'vouchers': "databases.models.accounting.Voucher",
    'cashvouchers': "databases.models.accounting.CashVoucher",
    'dailysales': "databases.models.accounting.DailySale",
    
    'customerdues': "databases.models.accounting.CustomerDue",
    
    
    #HRMS
    'employees': "databases.models.hrms.Employee",
    'attendances': "databases.models.hrms.Attendance",    
    
}



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication', 
        
    ],
}