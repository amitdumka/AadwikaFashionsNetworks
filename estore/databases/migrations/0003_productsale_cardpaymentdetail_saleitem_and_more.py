# Generated by Django 5.0.3 on 2024-06-25 18:04

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('databases', '0002_bank_brand_customer_employee_ledgermaster_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductSale',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('InvoiceNo', models.CharField(db_index=True, editable=False, max_length=255, primary_key=True, serialize=False)),
                ('OnDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('InvoiceType', models.IntegerField(choices=[(0, 'Sales'), (1, 'SalesReturn'), (2, 'ManualSale'), (3, 'ManualSaleReturn')])),
                ('BilledQty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('FreeQty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TotalMRP', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TotalDiscountAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TotalBasicAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TotalTaxAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('RoundOff', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TotalPrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Taxed', models.BooleanField()),
                ('Adjusted', models.BooleanField()),
                ('Paid', models.BooleanField()),
                ('ServiceBill', models.BooleanField()),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='databases.client')),
                ('Location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='databases.store')),
                ('Salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='databases.salesman')),
                ('StoreGroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='databases.storegroup')),
            ],
            options={
                'verbose_name': 'ProductSale',
                'verbose_name_plural': 'ProductSales',
            },
        ),
        migrations.CreateModel(
            name='CardPaymentDetail',
            fields=[
                ('Id', models.IntegerField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('PaidAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Card', models.IntegerField(choices=[(0, 'DebitCard'), (1, 'CreditCard'), (2, 'AmexCard')])),
                ('CardType', models.IntegerField(choices=[(0, 'Visa'), (1, 'MasterCard'), (2, 'Maestro'), (3, 'Amex'), (4, 'Dinners'), (5, 'Rupay')])),
                ('CardLastDigit', models.IntegerField()),
                ('AuthCode', models.IntegerField()),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='databases.client')),
                ('PosMachine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='databases.edcterminal')),
                ('InvoiceNumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='databases.productsale')),
            ],
            options={
                'verbose_name': 'CardPaymentDetail',
                'verbose_name_plural': 'CardPaymentDetails',
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('Id', models.IntegerField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('BilledQty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('FreeQty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Unit', models.IntegerField(choices=[(0, 'Meters'), (1, 'Nos'), (2, 'Pcs'), (3, 'Packets'), (4, 'NoUnit')])),
                ('DiscountAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('BasicAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TaxAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('TaxType', models.IntegerField(choices=[(0, 'GST'), (1, 'SGST'), (2, 'CGST'), (3, 'IGST'), (4, 'VAT'), (5, 'CST')])),
                ('InvoiceType', models.IntegerField(choices=[(0, 'Sales'), (1, 'SalesReturn'), (2, 'ManualSale'), (3, 'ManualSaleReturn')])),
                ('Adjusted', models.BooleanField()),
                ('LastPcs', models.BooleanField()),
                ('Barcode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='databases.productitem')),
                ('InvoiceNumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='databases.productsale')),
            ],
            options={
                'verbose_name': 'SaleItem',
                'verbose_name_plural': 'SaleItems',
                'unique_together': {('Id', 'InvoiceNumber')},
            },
        ),
        migrations.AddField(
            model_name='productsale',
            name='Items',
            field=models.ManyToManyField(to='databases.saleitem'),
        ),
        migrations.CreateModel(
            name='SalePaymentDetail',
            fields=[
                ('Id', models.IntegerField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('PaidAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('PayMode', models.IntegerField(choices=[(0, 'Cash'), (1, 'Card'), (2, 'RTGS'), (3, 'NEFT'), (4, 'IMPS'), (5, 'Wallets'), (6, 'Cheque'), (7, 'DemandDraft'), (8, 'Others'), (9, 'Coupons'), (10, 'MixPayments'), (11, 'UPI'), (12, 'SaleReturn')])),
                ('RefId', models.CharField(max_length=255)),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='databases.client')),
                ('InvoiceNumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='databases.productsale')),
            ],
            options={
                'verbose_name': 'SalePaymentDetail',
                'verbose_name_plural': 'SalePaymentDetails',
            },
        ),
        migrations.CreateModel(
            name='CustomerSale',
            fields=[
                ('Id', models.IntegerField(auto_created=True, db_index=True, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('OnDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='databases.client')),
                ('MobileNo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='databases.customer')),
                ('InvoiceNumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='databases.productsale')),
            ],
            options={
                'verbose_name': 'CustomerSale',
                'verbose_name_plural': 'CustomerSales',
                'unique_together': {('InvoiceNumber', 'MobileNo')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='productsale',
            unique_together={('InvoiceNo', 'OnDate')},
        ),
    ]
